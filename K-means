import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.metrics import mean_squared_error

url = 'https://raw.githubusercontent.com/JangirSumit/kmeans-clustering/master/driver-data.csv'
data = pd.read_csv(url)
print(data.head())

X = data[['mean_dist_day', 'mean_over_speed_perc']]

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=0)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)

plt.figure(figsize=(10, 5))
plt.plot(range(1, 11), wcss, marker='o', linestyle='--')
plt.title('Elbow Method for Optimal Number of Clusters')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.show()

optimal_clusters = 3
kmeans = KMeans(n_clusters=optimal_clusters, init='k-means++', max_iter=300, n_init=10, random_state=0)
kmeans.fit(X)

data['Cluster'] = kmeans.labels_

plt.figure(figsize=(10, 5))
sns.scatterplot(x='mean_dist_day', y='mean_over_speed_perc', hue='Cluster', data=data, palette='viridis')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='red', label='Centroids')
plt.title('Clusters of Drivers')
plt.xlabel('Mean Distance Driven per Day')
plt.ylabel('Mean Percentage of Time Over Speed Limit')
plt.legend()
plt.show()

mse = mean_squared_error(X, kmeans.cluster_centers_[kmeans.labels_])
print(f'Mean Squared Error: {mse}')
